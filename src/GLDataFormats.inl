
typedef struct {
	R_DataType		type;
	DataType		iformat;
} TextureFormatPair;

static const TextureFormatPair glTextureFormatMap[] = {
	{TEXTURE_UNORM			, 1		, vec4i(8 , 0 , 0 , 0 )		, GL_R8				},
	{TEXTURE_SNORM			, 1		, vec4i(8 , 0 , 0 , 0 )		, GL_R8_SNORM		},
	{TEXTURE_UNORM			, 1		, vec4i(16, 0 , 0 , 0 )		, GL_R16			},
	{TEXTURE_SNORM			, 1		, vec4i(16, 0 , 0 , 0 )		, GL_R16_SNORM		},
	{TEXTURE_UNORM			, 2		, vec4i(8 , 8 , 0 , 0 )		, GL_RG8			},
	{TEXTURE_SNORM			, 2		, vec4i(8 , 8 , 0 , 0 )		, GL_RG8_SNORM		},
	{TEXTURE_UNORM			, 2		, vec4i(16, 16, 0 , 0 )		, GL_RG16			},
	{TEXTURE_SNORM			, 2		, vec4i(16, 16, 0 , 0 )		, GL_RG16_SNORM		},
	{TEXTURE_UNORM			, 3		, vec4i(3 , 3 , 2 , 0 )		, GL_R3_G3_B2		},
	{TEXTURE_UNORM			, 3		, vec4i(4 , 4 , 4 , 0 )		, GL_RGB4			},
	{TEXTURE_UNORM			, 3		, vec4i(5 , 5 , 5 , 0 )		, GL_RGB5			},
	{TEXTURE_UNORM			, 3		, vec4i(8 , 8 , 8 , 0 )		, GL_RGB8			},
	{TEXTURE_SNORM			, 3		, vec4i(8 , 8 , 8 , 0 )		, GL_RGB8_SNORM		},
	{TEXTURE_UNORM			, 3		, vec4i(10, 10, 10, 0 )		, GL_RGB10			},
	{TEXTURE_UNORM			, 3		, vec4i(12, 12, 12, 0 )		, GL_RGB12			},
	{TEXTURE_SNORM			, 3		, vec4i(16, 16, 16, 0 )		, GL_RGB16_SNORM	},
	{TEXTURE_UNORM			, 4		, vec4i(2 , 2 , 2 , 2 )		, GL_RGBA2			},
	{TEXTURE_UNORM			, 4		, vec4i(4 , 4 , 4 , 4 )		, GL_RGBA4			},
	{TEXTURE_UNORM			, 4		, vec4i(5 , 5 , 5 , 1 )		, GL_RGB5_A1		},
	{TEXTURE_UNORM			, 4		, vec4i(8 , 8 , 8 , 8 )		, GL_RGBA8			},
	{TEXTURE_SNORM			, 4		, vec4i(8 , 8 , 8 , 8 )		, GL_RGBA8_SNORM	},
	{TEXTURE_UNORM			, 4		, vec4i(10, 10, 10, 2 )		, GL_RGB10_A2		},
	{TEXTURE_UINT			, 4		, vec4i(10, 10, 10, 2 )		, GL_RGB10_A2UI		},
	{TEXTURE_UNORM			, 4		, vec4i(12, 12, 12, 12)		, GL_RGBA12			},
	{TEXTURE_UNORM			, 4		, vec4i(16, 16, 16, 16)		, GL_RGBA16			},
	{TEXTURE_FLOAT			, 1		, vec4i(16, 0 , 0 , 0 )		, GL_R16F			},
	{TEXTURE_FLOAT			, 2		, vec4i(16, 16, 0 , 0 )		, GL_RG16F			},
	{TEXTURE_FLOAT			, 3		, vec4i(16, 16, 16, 0 )		, GL_RGB16F			},
	{TEXTURE_FLOAT			, 4		, vec4i(16, 16, 16, 16)		, GL_RGBA16F		},
	{TEXTURE_FLOAT			, 1		, vec4i(32, 0 , 0 , 0 )		, GL_R32F			},
	{TEXTURE_FLOAT			, 2		, vec4i(32, 32, 0 , 0 )		, GL_RG32F			},
	{TEXTURE_FLOAT			, 3		, vec4i(32, 32, 32, 0 )		, GL_RGB32F			},
	{TEXTURE_FLOAT			, 4		, vec4i(32, 32, 32, 32)		, GL_RGBA32F		},
	{TEXTURE_FLOAT			, 3		, vec4i(11, 11, 10, 0 )		, GL_R11F_G11F_B10F	},
	{TEXTURE_INT			, 1		, vec4i(8 , 0 , 0 , 0 )		, GL_R8I			},
	{TEXTURE_UINT			, 1		, vec4i(8 , 0 , 0 , 0 )		, GL_R8UI			},
	{TEXTURE_INT			, 1		, vec4i(16, 0 , 0 , 0 )		, GL_R16I			},
	{TEXTURE_UINT			, 1		, vec4i(16, 0 , 0 , 0 )		, GL_R16UI			},
	{TEXTURE_INT			, 1		, vec4i(32, 0 , 0 , 0 )		, GL_R32I			},
	{TEXTURE_UINT			, 1		, vec4i(32, 0 , 0 , 0 )		, GL_R32UI			},
	{TEXTURE_INT			, 2		, vec4i(8 , 8 , 0 , 0 )		, GL_RG8I			},
	{TEXTURE_UINT			, 2		, vec4i(8 , 8 , 0 , 0 )		, GL_RG8UI			},
	{TEXTURE_INT			, 2		, vec4i(16, 16, 0 , 0 )		, GL_RG16I			},
	{TEXTURE_UINT			, 2		, vec4i(16, 16, 0 , 0 )		, GL_RG16UI			},
	{TEXTURE_INT			, 2		, vec4i(32, 32, 0 , 0 )		, GL_RG32I			},
	{TEXTURE_UINT			, 2		, vec4i(32, 32, 0 , 0 )		, GL_RG32UI			},
	{TEXTURE_INT			, 3		, vec4i(8 , 8 , 8 , 0 )		, GL_RGB8I			},
	{TEXTURE_UINT			, 3		, vec4i(8 , 8 , 8 , 0 )		, GL_RGB8UI			},
	{TEXTURE_INT			, 3		, vec4i(16, 16, 16, 0 )		, GL_RGB16I			},
	{TEXTURE_UINT			, 3		, vec4i(16, 16, 16, 0 )		, GL_RGB16UI		},
	{TEXTURE_INT			, 3		, vec4i(32, 32, 32, 0 )		, GL_RGB32I			},
	{TEXTURE_UINT			, 3		, vec4i(32, 32, 32, 0 )		, GL_RGB32UI		},
	{TEXTURE_INT			, 4		, vec4i(8 , 8 , 8 , 8 )		, GL_RGBA8I			},
	{TEXTURE_UINT			, 4		, vec4i(8 , 8 , 8 , 8 )		, GL_RGBA8UI		},
	{TEXTURE_INT			, 4		, vec4i(16, 16, 16, 16)		, GL_RGBA16I		},
	{TEXTURE_UINT			, 4		, vec4i(16, 16, 16, 16)		, GL_RGBA16UI		},
	{TEXTURE_INT			, 4		, vec4i(32, 32, 32, 32)		, GL_RGBA32I		},
	{TEXTURE_UINT			, 4		, vec4i(32, 32, 32, 32)		, GL_RGBA32UI		},

	{TEXTURE_FLOAT_DEPTH	, 1		, vec4i(32, 0 , 0 , 0 )		, GL_DEPTH_COMPONENT},

	{TEXTURE_TYPE_LAST		, 0		, vec4i(0 , 0 , 0 , 0 )		, GL_R8				}
};

